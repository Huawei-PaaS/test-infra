plank:
  job_url_template: 'https://k8s-gubernator.appspot.com/build/huawei-kubernetes-jenkins/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if ne .Spec.Refs.Org ""}}{{if ne .Spec.Refs.Org "kubernetes"}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{else if ne .Spec.Refs.Repo "kubernetes"}}/{{.Spec.Refs.Repo}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://k8s-gubernator.appspot.com/pr/{{if eq .Spec.Refs.Org "kubernetes"}}{{if eq .Spec.Refs.Repo "kubernetes"}}{{else}}{{.Spec.Refs.Repo}}/{{end}}{{else}}{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{end}}{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}). Please help us cut down on flakes by [linking to](https://github.com/kubernetes/community/blob/master/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/{{.Spec.Refs.Org}}/{{.Spec.Refs.Repo}}/issues?q=is:issue+is:open) when you hit one in your PR.'

sinker:
  resync_period: 1h
  max_prowjob_age: 48h
  max_pod_age: 1h

prowjob_namespace: default
pod_namespace: test-pods
log_level: info

tide:
  queries:
  - "type:pr state:open repo:kubernetes/test-infra label:lgtm label:approved -label:needs-ok-to-test -label:do-not-merge/work-in-progress -label:do-not-merge/hold label:\"cncf-cla: yes\""

push_gateway:
  endpoint: pushgateway

presubmits:
  Huawei-PaaS/kubernetes:
  - name: pull-kubernetes-bazel-build
    agent: kubernetes
    context: pull-kubernetes-bazel-build
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-build"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-build),?(\\s+|$)"
    skip_branches:
    - release-1.4
    - release-1.5
    - release-1.6  # doesn't have BUILD files under //vendor/k8s.io
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20170929-ed26bd34-0.5.4
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/Huawei-PaaS/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://huawei-kubernetes-jenkins/pr-logs"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        - name: runner
          mountPath: /usr/local/bin/runner
          subPath: runner
        command:
        - /bin/bash
        - /usr/local/bin/runner
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: runner
        configMap:
          name: bazelbuild-runner
    run_after_success:
    - name: pull-kubernetes-e2e-kubeadm-gce
      agent: kubernetes
      context: pull-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: false
      always_run: true
      #run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      rerun_command: "/test pull-kubernetes-e2e-kubeadm-gce"
      trigger: "(?m)^/test pull-kubernetes-e2e-kubeadm-gce,?(\\s+|$)"
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171003-d61471c6
          args:
          - "--repo=github.com/Huawei-PaaS/$(REPO_NAME)=$(PULL_REFS)"
          - "--upload=gs://huawei-kubernetes-jenkins/pr-logs"
          - "--git-cache=/root/.cache/git"
          - "--timeout=75"
          - "--clean"
          env:
          - name: USER
            value: prow
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/service-account/service-account.json
          - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
            value: /etc/ssh-key-secret/ssh-private
          - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
            value: /etc/ssh-key-secret/ssh-public
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: true
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: ssh
            mountPath: /etc/ssh-key-secret
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          - name: runner
            mountPath: /usr/local/bin/runner
            subPath: runner
          command:
          - /bin/bash
          - /usr/local/bin/runner
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: ssh
          secret:
            secretName: ssh-key-secret
            defaultMode: 0400
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
        - name: runner
          configMap:
            name: kubeadm-runner

  - name: pull-kubernetes-bazel-test
    agent: kubernetes
    context: pull-kubernetes-bazel-test
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-test"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-test),?(\\s+|$)"
    skip_branches:
    - release-1.4
    - release-1.5
    - release-1.6  # doesn't have BUILD files under //vendor/k8s.io
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20170929-ed26bd34-0.5.4
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/Huawei-PaaS/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://huawei-kubernetes-jenkins/pr-logs"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        - name: runner
          mountPath: /usr/local/bin/runner
          subPath: runner
        command:
        - /bin/bash
        - /usr/local/bin/runner
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: runner
        configMap:
          name: bazelbuild-runner

  - name: pull-kubernetes-unit
    agent: kubernetes
    always_run: true
    context: pull-kubernetes-unit
    rerun_command: "/test pull-kubernetes-unit"
    trigger: "(?m)^/test( all| pull-kubernetes-unit),?(\\s+|$)"
    spec:
      containers:
      - image: jianhuiz/kube-test
        args:
        - "--clean"
        - "--root=/go/src"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/Huawei-PaaS/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://huawei-kubernetes-jenkins/pr-logs"
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: docker
          mountPath: /var/run/docker.sock
        - name: k8s
          mountPath: /go/src/k8s.io/kubernetes
        - name: runner
          mountPath: /usr/local/bin/runner
          subPath: runner
        command:
        - /bin/bash
        - /usr/local/bin/runner
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: docker
        hostPath:
          path: /var/run/docker.sock
      - name: k8s
        hostPath:
          path: /go/src/k8s.io/kubernetes
      - name: runner
        configMap:
          name: kube-test-runner

  - name: pull-kubernetes-verify
    agent: kubernetes
    always_run: true
    context: pull-kubernetes-verify
    rerun_command: "/test pull-kubernetes-verify"
    trigger: "(?m)^/test( all| pull-kubernetes-verify),?(\\s+|$)"
    spec:
      containers:
      - image: jianhuiz/kube-test
        args:
        - "--clean"
        - "--root=/go/src"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/Huawei-PaaS/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://huawei-kubernetes-jenkins/pr-logs"
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: docker
          mountPath: /var/run/docker.sock
        - name: k8s
          mountPath: /go/src/k8s.io/kubernetes
        - name: runner
          mountPath: /usr/local/bin/runner
          subPath: runner
        command:
        - /bin/bash
        - /usr/local/bin/runner
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: docker
        hostPath:
          path: /var/run/docker.sock
      - name: k8s
        hostPath:
          path: /go/src/k8s.io/kubernetes
      - name: runner
        configMap:
          name: kube-test-runner

  - name: pull-has-upstream-pr
    agent: kubernetes
    always_run: true
    context: pull-has-upstream-pr
    rerun_command: "/test pull-has-upstream-pr"
    trigger: "(?m)^/test( all| pull-has-upstream-pr),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:0.5
        args:
        - "--job=$(JOB_NAME)"
        - "--upload=gs://huawei-kubernetes-jenkins/pr-logs/pull/$(REPO_OWNER)_$(REPO_NAME)/$(PULL_NUMBER)"
        - "--bare"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        volumeMounts:
        - name: token
          mountPath: /etc/token
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: runner
          mountPath: /usr/local/bin/runner
          subPath: runner
        command:
        - /bin/bash
        - /usr/local/bin/runner
      volumes:
      - name: token
        secret:
          secretName: fejta-bot-token
      - name: service
        secret:
          secretName: service-account
      - name: runner
        configMap:
          name: gcloud-runner

periodics:
- name: periodic-downstream-kubernetes
  interval: 48h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/gcloud-in-go:0.5
      args:
      - "--job=$(JOB_NAME)"
      - "--upload=gs://huawei-kubernetes-jenkins/logs"
      - "--bare"
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: REPO_OWNER
        value: Huawei-PaaS
      - name: REPO_NAME
        value: kubernetes
      - name: UPSTREAM_URL
        value: https://github.com/kubernetes/kubernetes.git
      - name: BRANCHES
        value: master,release-1.7,release-1.8
      volumeMounts:
      - name: token
        mountPath: /etc/token
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: runner
        mountPath: /usr/local/bin/runner
        subPath: runner
      command:
      - /bin/bash
      - /usr/local/bin/runner
    volumes:
    - name: token
      secret:
        secretName: fejta-bot-token
    - name: service
      secret:
        secretName: service-account
    - name: runner
      configMap:
        name: gcloud-runner

- name: periodic-test-infra-retester
  interval: 20m  # Retest at most 1 PR per 20m, which should not DOS the queue.
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/commenter:v20170808-abf66782
      args:
      - |-
        --query=is:pr
        -label:do-not-merge
        -label:do-not-merge/blocked-paths
        -label:do-not-merge/cherry-pick-not-approved
        -label:do-not-merge/hold
        -label:do-not-merge/release-note-label-needed
        -label:do-not-merge/work-in-progress
        label:lgtm
        status:failure
        -label:needs-rebase
        -label:needs-ok-to-test
        -label:"cncf-cla: no"
        repo:Huawei-PaaS/kubernetes
      - --token=/etc/token/bot-github-token
      - |-
        --comment=/retest
        This bot automatically retries jobs that failed/flaked on approved PRs (send feedback to `@fejta`).

        Review the [full test history](https://k8s-gubernator.appspot.com/pr/{{.Number}}) for this PR.

      - --template
      - --ceiling=1
      - --confirm
      - --updated=24h
      volumeMounts:
      - name: token
        mountPath: /etc/token
    volumes:
    - name: token
      secret:
        secretName: fejta-bot-token
